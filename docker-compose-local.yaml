version: "3.8"

services:
  # PostgreSQL database service
  postgres:
    image: postgres:16-alpine     
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    # Configure persistent storage and initialization scripts
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
      - ./init-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 10s
      retries: 5

  # Service for loading historical player statistics
  history_stats_loader:
    build:
      context: .
      dockerfile: Dockerfile.history
    image: fantasy_survivors:history
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy     
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./scripts:/app/scripts
    command: python ./scripts/player_history_stats_loader.py

  # Service for loading daily player statistics
  daily_loader:
    build:
      context: .
      dockerfile: Dockerfile.crontab
    image: fantasy_survivors:daily
    depends_on:
      postgres:
        condition: service_healthy     
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./scripts:/app/scripts
    command: ./start-crontab.sh

volumes:
  postgres_data:

  
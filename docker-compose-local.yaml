version: "3.8"

services:
  # PostgreSQL database service
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: fantasy_survivors
    ports:
      - 5432:5432
    # Configure persistent storage and initialization scripts
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
      - ./init-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d fantasy_survivors"]
      interval: 2s
      timeout: 10s
      retries: 5

  # Service for loading historical player statistics
  history_stats_loader:
    build:
      context: .
      dockerfile: Dockerfile.history
    working_dir: /app
    volumes:
      - ./scripts:/app/scripts
    # Ensure database is started before this service
    depends_on:
      postgres:
        condition: service_healthy
    # Configure database connection string
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: fantasy_survivors
    command: python ./scripts/player_history_stats_loader.py

  # Service for loading daily player statistics
  # daily_loader:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.crontab
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     POSTGRES_HOST: postgres
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: postgres_user
  #     POSTGRES_PASSWORD: postgres_password
  #     POSTGRES_DB: fantasy_survivors
  #   volumes:
  #     - ./scripts:/app/scripts
  #   command: ./run-crontab.sh

# Define named volumes used by services
volumes:
  # Volume for persisting PostgreSQL data
  postgres_data:

## some commands to check the volumes
# docker volume ls
# docker volume inspect postgres_data

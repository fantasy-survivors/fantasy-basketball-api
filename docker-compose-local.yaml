version: "3.8"

services:
  # PostgreSQL database service
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: fantasy_survivors
    ports:
      - 5432:5432
    # Configure persistent storage and initialization scripts
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
      - ./init-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount initialization scripts


  # Service for loading historical player statistics
  # history_stats_loader:
  #   # Build container using Python Dockerfile
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.history-data
  #   # Mount scripts directory into container
  #   working_dir: /app
  #   volumes:
  #     - ./scripts:/app/scripts
  #   # Ensure database is started before this service
  #   depends_on:
  #     - postgres
  #   # Configure database connection string
  #   environment:
  #     POSTGRES_HOST: postgres
  #     POSTGRES_USER: postgres_user
  #     POSTGRES_PASSWORD: postgres_password
  #     POSTGRES_DB: fantasy_survivors
  #   # Run the history stats loader script
  #   command: python ./scripts/player_history_stats_loader.py

  # # Service for loading daily player statistics
  # daily_stats_loader:
  #   # Build container using Python Dockerfile
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.python
  #   # Mount scripts directory into container
  #   volumes:
  #     - ./scripts:/app/scripts
  #   # Ensure database is started before this service
  #   depends_on:
  #     - database
  #   # Configure database connection string
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@database:5432/fantasy_survivors
  #   # Run the daily stats loader script
  #   command: python ./scripts/player_daily_stats_loader.py

# Define named volumes used by services
volumes:
  # Volume for persisting PostgreSQL data
  postgres_data:

## some commands to check the volumes
# docker volume ls
# docker volume inspect postgres_data
